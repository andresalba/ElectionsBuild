{"version":3,"sources":["Components/Credits.jsx","Components/Modal.jsx","App.js","index.js"],"names":["Credits","_jsx","children","Modal","_ref","nombre","electoral","winner","percentb","percentt","votesb","votest","projectedWinnerClass","_jsxs","className","App","mapContainer","useRef","map","lng","setLng","useState","lat","setLat","zoom","setZoom","changeLayer","setChangeLayer","stateInfo","setStateInfo","popup","mapboxgl","Popup","closeButton","closeOnClick","useEffect","current","Map","container","style","center","on","getCenter","toFixed","getZoom","addLayer","id","type","source","data","paint","e","features","queryRenderedFeatures","point","layers","length","hoveredFeature","properties","NAME","ELECTORAL","WINNER","PERCENTB","PERCENTT","VOTESB","VOTEST","setLngLat","lngLat","setHTML","addTo","remove","ref","accessToken","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95e11e91.chunk.js","sourcesContent":["\r\n\r\nconst Credits = () => {\r\n    return (\r\n        <div>\r\n            <h1>Andres Alba's presidential election map</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Credits;","import './Modal.css'\r\n\r\nconst Modal = ({ nombre, electoral, winner, percentb, percentt, votesb, votest }) => {\r\n\r\n    const projectedWinnerClass = winner === 'Trump' ? 'modal-red' : 'modal-blue';\r\n\r\n    return (\r\n        <div className=\"modal-layer\">\r\n            <div className=\"modal-title\">\r\n                <div className=\"modal-head\">\r\n                    <div className=\"modal-font\">\r\n                        President: {nombre}\r\n                    </div>\r\n                    <div className=\"modal-font\">\r\n                        {electoral} Electoral Votes\r\n                    </div>\r\n                </div>\r\n                <div className={`${projectedWinnerClass} modal-font`}>\r\n                    Projected Winner: {winner}\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-row\">\r\n                <div className=\"modal-data modal-grey\">\r\n                    Candidate\r\n                </div>\r\n                <div className=\"modal-data modal-grey modal-left\">\r\n                    %\r\n                </div>\r\n                <div className=\"modal-data modal-grey modal-left\">\r\n                    Votes\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-row\">\r\n                <div className=\"modal-data modal-blue\">\r\n                    Biden\r\n                </div>\r\n                <div className=\"modal-data modal-left\">\r\n                    {percentb}%\r\n                </div>\r\n                <div className=\"modal-data modal-left\">\r\n                    {votesb}\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-row\">\r\n                <div className=\"modal-data modal-red\">\r\n                    Trump\r\n                </div>\r\n                <div className=\"modal-data modal-left\">\r\n                    {percentt}%\r\n                </div>\r\n                <div className=\"modal-data modal-left\">\r\n                    {votest}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { useRef, useEffect, useState } from \"react\";\r\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport Credits from \"./Components/Credits\";\r\nimport Modal from \"./Components/Modal\";\r\n\r\nmapboxgl.accessToken =\r\n    \"pk.eyJ1IjoiYW5kcmVzYWxiYSIsImEiOiJjbHBqZjI4aWgwMWlvMmlxdW53aHk5M3FoIn0.J_sM4Dw5zslkBHK9-kro8Q\";\r\n\r\nexport default function App() {\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(-98.6);\r\n    const [lat, setLat] = useState(39.27);\r\n    const [zoom, setZoom] = useState(3);\r\n\r\n    const [changeLayer, setChangeLayer] = useState(false);\r\n    const [stateInfo, setStateInfo] = useState({\r\n        nombre: \"\",\r\n        electoral: \"\",\r\n        winner: \"\",\r\n        percentb: \"\",\r\n        percentt: \"\",\r\n        votesb: \"\",\r\n        votest: \"\",\r\n    });\r\n    const popup = new mapboxgl.Popup({\r\n        closeButton: false,\r\n        closeOnClick: false,\r\n    });\r\n         \r\n\r\n    function initializenMap() {\r\n        if (map.current) return; // initialize map only once\r\n        map.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: \"mapbox://styles/mapbox/outdoors-v12\",\r\n            center: [lng, lat],\r\n            zoom: zoom,\r\n        });\r\n\r\n        map.current.on(\"move\", () => {\r\n            setLng(map.current.getCenter().lng.toFixed(4));\r\n            setLat(map.current.getCenter().lat.toFixed(4));\r\n            setZoom(map.current.getZoom().toFixed(2));\r\n        });\r\n\r\n        setChangeLayer(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        initializenMap();\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (changeLayer) {\r\n            map.current.on(\"load\", () => {\r\n                setChangeLayer(false)\r\n                map.current.addLayer({\r\n                    id: 'states',\r\n                    type: 'fill',\r\n                    source: {\r\n                        type: 'geojson',\r\n                        data: './usa-geojson.json'\r\n                    },\r\n                    paint: {\r\n                        'fill-color': [\r\n                            'match',\r\n                            ['get', 'STATE'],\r\n                            '01',\r\n                            'red',\r\n                            '02',\r\n                            'red',\r\n                            '04',\r\n                            'blue',\r\n                            '05',\r\n                            'red',\r\n                            '06',\r\n                            'blue',\r\n                            '08',\r\n                            'blue',\r\n                            '09',\r\n                            'blue',\r\n                            '10',\r\n                            'blue',\r\n                            '11',\r\n                            'blue',\r\n                            '12',\r\n                            'red',\r\n                            '13',\r\n                            'blue',\r\n                            '15',\r\n                            'blue',\r\n                            '16',\r\n                            'red',\r\n                            '17',\r\n                            'blue',\r\n                            '18',\r\n                            'red',\r\n                            '19',\r\n                            'red',\r\n                            '20',\r\n                            'red',\r\n                            '21',\r\n                            'red',\r\n                            '22',\r\n                            'red',\r\n                            '23',\r\n                            'blue',\r\n                            '24',\r\n                            'blue',\r\n                            '25',\r\n                            'blue',\r\n                            '26',\r\n                            'blue',\r\n                            '27',\r\n                            'blue',\r\n                            '28',\r\n                            'red',\r\n                            '29',\r\n                            'red',\r\n                            '30',\r\n                            'red',\r\n                            '31',\r\n                            'red',\r\n                            '32',\r\n                            'blue',\r\n                            '33',\r\n                            'blue',\r\n                            '34',\r\n                            'blue',\r\n                            '35',\r\n                            'blue',\r\n                            '36',\r\n                            'blue',\r\n                            '37',\r\n                            'red',\r\n                            '38',\r\n                            'red',\r\n                            '39',\r\n                            'red',\r\n                            '40',\r\n                            'red',\r\n                            '41',\r\n                            'blue',\r\n                            '42',\r\n                            'blue',\r\n                            '44',\r\n                            'blue',\r\n                            '45',\r\n                            'red',\r\n                            '46',\r\n                            'red',\r\n                            '47',\r\n                            'red',\r\n                            '48',\r\n                            'red',\r\n                            '49',\r\n                            'red',\r\n                            '50',\r\n                            'blue',\r\n                            '51',\r\n                            'blue',\r\n                            '53',\r\n                            'blue',\r\n                            '54',\r\n                            'red',\r\n                            '55',\r\n                            'blue',\r\n                            '56',\r\n                            'red',\r\n                            '72',\r\n                            'orange',\r\n                            'orange'\r\n                        ],\r\n                        'fill-outline-color': 'white'\r\n                    },\r\n                });\r\n\r\n                 map.current.on('mousemove', 'states', (e) => {\r\n                    const features = map.current.queryRenderedFeatures(e.point, {\r\n                        layers: ['states'],\r\n                    });\r\n\r\n                    if (features.length > 0) {\r\n                        const hoveredFeature = features[0];\r\n                        const nombre = hoveredFeature.properties.NAME;\r\n                        const electoral = hoveredFeature.properties.ELECTORAL;\r\n                        const winner = hoveredFeature.properties.WINNER;\r\n                        const percentb = hoveredFeature.properties.PERCENTB;\r\n                        const percentt = hoveredFeature.properties.PERCENTT;\r\n                        const votesb = hoveredFeature.properties.VOTESB;\r\n                        const votest = hoveredFeature.properties.VOTEST;\r\n                        \r\n                        popup\r\n                            .setLngLat(e.lngLat)\r\n                            .setHTML(\r\n                                `<div>\r\n                                    <div class=\"popup-row\"><strong>President:</strong> ${nombre}<br></div>\r\n                                    <div class=\"popup-row\"><strong>Electoral Votes:</strong> ${electoral}<br></div>\r\n                                    <div class=\"popup-row\"><strong>Projected Winner:</strong> ${winner}<br></div>\r\n                                    <div class=\"popup-row\"><strong class=\"popup-blue\">Percent Biden:</strong> ${percentb}%<br></div>\r\n                                    <div class=\"popup-row\"><strong class=\"popup-red\">Percent Trump:</strong> ${percentt}%<br></div>\r\n                                    <div class=\"popup-row\"><strong class=\"popup-blue\">Votes Biden:</strong> ${votesb}<br></div>\r\n                                    <div class=\"popup-row\"><strong class=\"popup-red\">Votes Trump:</strong> ${votest}</div>\r\n                                </div>`\r\n                            )\r\n                            .addTo(map.current);\r\n\r\n                        setStateInfo({\r\n                            nombre,\r\n                            electoral,\r\n                            winner,\r\n                            percentb,\r\n                            percentt,\r\n                            votesb,\r\n                            votest,\r\n                        });\r\n                    }\r\n                });\r\n                map.current.on('mouseleave', 'states', () => {\r\n                    popup.remove(); \r\n                });\r\n            })\r\n        }\r\n    }, [changeLayer]);\r\n\r\n    return (\r\n        <div>\r\n            <Credits />\r\n            <div className=\"sidebar\">\r\n                Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n            </div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n            <Modal {...stateInfo} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}